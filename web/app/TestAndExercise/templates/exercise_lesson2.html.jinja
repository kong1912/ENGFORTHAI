{% extends 'layout.html.jinja' %}
{% block head %}
{% endblock %}
{% block title %} endblock {% endblock %}
{% block content %}
   
  
    <div class="text-center">
        <h1>Exercise2</h1>       
        <h2> Speak these words </h2> 
    </div>

    {% for word in words %}

        <div class="text-center" id="wordData-{{ loop.index }}"> {{word| first}} </div>
        <div class="text-center">       
            <button class="btn btn-success" id="startRecording-{{ loop.index }}" type="button" name="start-btn-{{ loop.index }}" >start</button>
            <button class="btn btn-success" id="stopRecording-{{ loop.index }}" type="button" name="stop-btn-{{ loop.index }}" >stop</button>
            <input type="hidden" id="text-{{ loop.index }}" name="text-{{ loop.index }}" value="{{word| first}}" >
        </div>
    {% endfor %}    
    <script>
            
            {#navigator#}
        {#    .mediaDevices#}
        {#    .getUserMedia({audio: true})#}
        {#    .then(stream => {#}
        {#        handlerFunction(stream)#}
        {#    });#} 

        function handlerFunction(stream, word) {
            rec = new MediaRecorder(stream);
            rec.ondataavailable = e => {
                audioChunks.push(e.data);
                if (rec.state == "inactive") {
                    {#let blob = new Blob(audioChunks, {type: 'audio/wav'});#}
                    let blob = new Blob(audioChunks, {type: 'audio/webm'});
                    sendData(blob);
                }
            }
        }

        function sendData(data, word) {
            var form = new FormData();
            form.append('file', data, 'data.webm');
            form.append('title', 'data.webm');
            form.append('word', word);
            //Chrome inspector shows that the post data includes a file and a title.
            $.ajax({
                type: 'POST',
                url: '/asr',
                data: form,
                cache: false,
                processData: false,
                contentType: false
            }).done(function (data) {
                console.log(data);
                alert(JSON.stringify(data));
            });
        }


        attachEvents();

        function attachEvents() {
            {% for word in words %}
                attachEvent({{ loop.index }});
            {% endfor %}
        }

        function attachEvent(i) {
            const wordData = document.getElementById(`wordData-${i}`);
            const startRecording = document.getElementById(`startRecording-${i}`);
            const stopRecording = document.getElementById(`stopRecording-${i}`);

            let word = wordData.innerText

            if (navigator.mediaDevices) {
                console.log('getUserMedia supported.');

                const constraints = {audio: true};
                let chunks = [];

                navigator.mediaDevices.getUserMedia(constraints)
                    .then(function (stream) {

                        const mediaRecorder = new MediaRecorder(stream);

                        startRecording.onclick = function () {
                            mediaRecorder.start();
                            console.log(mediaRecorder.state);
                            console.log(`recorder started - ${word}`);
                            startRecording.style.background = "red";
                            startRecording.style.color = "black";

                            startRecording.disabled = true;
                            stopRecording.disabled = false;
                        }

                        stopRecording.onclick = function () {
                            mediaRecorder.stop();
                            console.log(mediaRecorder.state);
                            console.log(`recorder stopped A - ${word}`);
                            startRecording.style.background = "";
                            startRecording.style.color = "";

                            startRecording.disabled = false;
                            stopRecording.disabled = true;
                        }

                        mediaRecorder.onstop = function (e) {
                            console.log("data available after MediaRecorder.stop() called.");

                            const blob = new Blob(chunks, {'type': 'audio/webm; codecs=opus'});
                            // const blob = new Blob(chunks, {'type': 'audio/ogg; codecs=opus'});
                            // const blob = new Blob(chunks, {'type': 'audio/webm'});
                            chunks = [];
                            sendData(blob, word);
                            console.log(`recorder stopped B - ${word}`);
                        }

                        mediaRecorder.ondataavailable = function (e) {
                            chunks.push(e.data);
                        }
                    })
                    .catch(function (err) {
                        console.log('The following error occurred: ' + err);
                    })
            }

        }
    </script>
    
    <hr>
    
    <div class="text-center">

        <a href="{{ url_for('main.profile') }}"> {{ form.submit(class='btn btn-primary') }} </a>

    </div>    

{% endblock %}



   